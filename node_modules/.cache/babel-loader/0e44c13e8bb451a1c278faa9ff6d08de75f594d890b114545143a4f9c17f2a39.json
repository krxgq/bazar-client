{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bodnarchuk Bohdan\\\\Desktop\\\\bazar_remake\\\\frontend\\\\src\\\\Favourites.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FavCard from \"./components/FavCard.jsx\";\nconst config = require(\"./configs/config.js\");\nimport { getCurrentUser } from \"./app.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favourites = () => {\n  _s();\n  const [favs, setFavs] = useState([]);\n  const [userID, setUserID] = useState(null);\n  useEffect(() => {\n    fetchFavs();\n  });\n  const fetchFavs = async () => {\n    var user = await getCurrentUser();\n    setUserID(user.id);\n    console.log(\"User ID: \", userID);\n    try {\n      const response = await fetch(`http://${config.host}:3001/api/getAllFavorites`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"json\"\n        },\n        body: JSON.stringify({\n          userID: userID\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error fetching favourite items: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setFavs(data); // Set the items in state\n    } catch (error) {\n      console.error(\"Error fetching favourite items: \", error);\n    }\n    return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: favs.map(fav => /*#__PURE__*/_jsxDEV(FavCard, {\n        // Make sure to provide a unique key for each item\n        id: fav.id,\n        name: fav.title,\n        img: fav.img,\n        price: fav.price\n      }, fav.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(Favourites, \"EKAAyMgV2nb2TrIExanjfF3vK34=\");\n_c = Favourites;\nexport default Favourites;\nvar _c;\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"names":["React","useState","useEffect","FavCard","config","require","getCurrentUser","jsxDEV","_jsxDEV","Favourites","_s","favs","setFavs","userID","setUserID","fetchFavs","user","id","console","log","response","fetch","host","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","error","StrictMode","children","map","fav","name","title","img","price","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bodnarchuk Bohdan/Desktop/bazar_remake/frontend/src/Favourites.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FavCard from \"./components/FavCard.jsx\";\r\nconst config = require(\"./configs/config.js\");\r\nimport { getCurrentUser } from \"./app.js\";\r\n\r\nconst Favourites = () => {\r\n  const [favs, setFavs] = useState([]);\r\n  const [userID, setUserID] = useState(null);\r\n  useEffect(() => {\r\n    fetchFavs();\r\n  });\r\n\r\n  const fetchFavs = async () => {\r\n    var user = await getCurrentUser();\r\n    setUserID(user.id);\r\n    console.log(\"User ID: \", userID);\r\n    try {\r\n      const response = await fetch(\r\n        `http://${config.host}:3001/api/getAllFavorites`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"json\",\r\n          },\r\n          body: JSON.stringify({ userID: userID }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\r\n          `Error fetching favourite items: ${response.statusText}`\r\n        );\r\n      }\r\n\r\n      const data = await response.json();\r\n      setFavs(data); // Set the items in state\r\n    } catch (error) {\r\n      console.error(\"Error fetching favourite items: \", error);\r\n    }\r\n\r\n    return (\r\n      <React.StrictMode>\r\n        {favs.map((fav) => (\r\n          <FavCard\r\n            key={fav.id} // Make sure to provide a unique key for each item\r\n            id={fav.id}\r\n            name={fav.title}\r\n            img={fav.img}\r\n            price={fav.price}\r\n          />\r\n        ))}\r\n      </React.StrictMode>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Favourites;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,MAAMC,MAAM,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC7C,SAASC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1CC,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,CAAC;EAEF,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,IAAI,GAAG,MAAMV,cAAc,CAAC,CAAC;IACjCQ,SAAS,CAACE,IAAI,CAACC,EAAE,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,MAAM,CAAC;IAChC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAC1B,UAAUjB,MAAM,CAACkB,IAAI,2BAA2B,EAChD;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,MAAM,EAAEA;QAAO,CAAC;MACzC,CACF,CAAC;MACD,IAAI,CAACO,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CACb,mCAAmCT,QAAQ,CAACU,UAAU,EACxD,CAAC;MACH;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCpB,OAAO,CAACmB,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;IAEA,oBACEzB,OAAA,CAACR,KAAK,CAACkC,UAAU;MAAAC,QAAA,EACdxB,IAAI,CAACyB,GAAG,CAAEC,GAAG,iBACZ7B,OAAA,CAACL,OAAO;QACO;QACbc,EAAE,EAAEoB,GAAG,CAACpB,EAAG;QACXqB,IAAI,EAAED,GAAG,CAACE,KAAM;QAChBC,GAAG,EAAEH,GAAG,CAACG,GAAI;QACbC,KAAK,EAAEJ,GAAG,CAACI;MAAM,GAJZJ,GAAG,CAACpB,EAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC;EAEvB,CAAC;AACH,CAAC;AAACnC,EAAA,CAhDID,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}