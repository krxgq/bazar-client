{"ast":null,"code":"//app.js\nimport cookie from \"js-cookie\";\nconst config = require(\"./configs/config.js\");\nexport async function insertUser() {\n  var firstName = document.getElementById(\"fname\").value;\n  var lastName = document.getElementById(\"lname\").value;\n  var username = document.getElementById(\"username\").value;\n  var email = document.getElementById(\"email\").value;\n  var password = document.getElementById(\"pass\").value;\n  try {\n    const response = await fetch(`http://${config.host}/api/insertUser`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        email: email,\n        password: password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to insert user\");\n    } else {\n      alert(\"User added successfully\");\n    }\n  } catch (err) {\n    console.error(\"Error:\", err);\n    alert(\"Error adding user\");\n  }\n}\nexport async function addFav(productID) {\n  let user = await getCurrentUser();\n  let userID = user.id;\n  try {\n    const response = await fetch(`http://${config.host}:3001/api/addFav`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userID: userID,\n        productID: productID\n      })\n    });\n    if (response.ok) {\n      alert(\"Favorite added successfully\");\n    } else {\n      throw new Error(\"Failed to add favorite\");\n    }\n  } catch (err) {\n    console.error(\"Error:\", err);\n    alert(\"Error adding favorite\");\n  }\n}\nexport async function removeFav(productID) {\n  var user = getCurrentUser();\n  var userID = user.id;\n  try {\n    const response = await fetch(`http://${config.host}:3001/api/removeFav`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userID: userID,\n        productID: productID\n      })\n    });\n    if (response.ok) {\n      alert(\"Favorite removed successfully\");\n    } else {\n      throw new Error(\"Failed to remove favorite\");\n    }\n  } catch (err) {\n    console.error(\"Error:\", err);\n    alert(\"Error removing favorite\");\n  }\n}\nexport async function getAllFavorites() {\n  var user = await getCurrentUser();\n  try {\n    const response = await fetch(`http://${config.host}:3001/api/getAllFavorites`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userID: user.id\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      console.log(\"Favorites:\", data);\n      return Array.isArray(data) ? data : [data];\n    } else {\n      throw new Error(\"Failed to fetch favorites\");\n    }\n  } catch (err) {\n    console.error(\"Error:\", err);\n    alert(\"Error fetching favorites\");\n  }\n}\nexport async function login() {\n  var username = document.getElementById(\"username\").value;\n  var password = document.getElementById(\"pass\").value;\n  try {\n    const response = await fetch(`http://${config.host}:3001/api/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      // Save access token in cookie\n      document.cookie = `accessToken=${data.accessToken}`;\n      alert(\"Login successful\");\n      window.location.replace(\"/\");\n    } else if (response.status === 404) {\n      alert(\"User not found\");\n    } else if (response.status === 401) {\n      alert(\"Incorrect password\");\n    } else {\n      throw new Error(\"Failed to login\");\n    }\n  } catch (err) {\n    console.error(\"Error:\", err);\n    alert(\"Error logging in\");\n  }\n}\nexport async function validateAccessToken() {\n  var accessToken = cookie.get(\"accessToken\");\n  try {\n    const response = await fetch(`http://${config.host}:3001/api/validateAccessToken`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        accessToken: accessToken\n      })\n    });\n    if (response.ok) {\n      return true;\n    } else if (response.status === 401) {\n      cookie.remove(\"accessToken\");\n      return false;\n    } else {\n      cookie.remove(\"accessToken\");\n      throw new Error(\"Failed to validate access token\");\n    }\n  } catch (err) {\n    console.error(\"Error:\", err);\n    return false;\n  }\n}\nexport const getCurrentUser = async () => {\n  try {\n    const accessToken = cookie.get(\"accessToken\");\n    const response = await fetch(`http://${config.host}:3001/api/getCurrentUser`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        accessToken\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch current user data\");\n    }\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    console.error(\"Error fetching current user:\", error.message);\n    throw error;\n  }\n};\n\n/* \r\nexport async function getAllItems() {\r\n  try {\r\n    const response = await fetch(`http://${config.url}:3001/api/getAllItems`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return response.json();\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n  }\r\n} */","map":{"version":3,"names":["cookie","config","require","insertUser","firstName","document","getElementById","value","lastName","username","email","password","response","fetch","host","method","headers","body","JSON","stringify","ok","Error","alert","err","console","error","addFav","productID","user","getCurrentUser","userID","id","removeFav","getAllFavorites","data","json","log","Array","isArray","login","accessToken","window","location","replace","status","validateAccessToken","get","remove","userData","message"],"sources":["C:/Users/Bodnarchuk Bohdan/Desktop/bazar_remake/frontend/src/app.js"],"sourcesContent":["//app.js\r\nimport cookie from \"js-cookie\";\r\nconst config = require(\"./configs/config.js\");\r\n\r\nexport async function insertUser() {\r\n  var firstName = document.getElementById(\"fname\").value;\r\n  var lastName = document.getElementById(\"lname\").value;\r\n  var username = document.getElementById(\"username\").value;\r\n  var email = document.getElementById(\"email\").value;\r\n  var password = document.getElementById(\"pass\").value;\r\n\r\n  try {\r\n    const response = await fetch(`http://${config.host}/api/insertUser`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to insert user\");\r\n    } else {\r\n      alert(\"User added successfully\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n    alert(\"Error adding user\");\r\n  }\r\n}\r\n\r\nexport async function addFav(productID) {\r\n  let user = await getCurrentUser();\r\n  let userID = user.id;\r\n\r\n  try {\r\n    const response = await fetch(`http://${config.host}:3001/api/addFav`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userID: userID,\r\n        productID: productID,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert(\"Favorite added successfully\");\r\n    } else {\r\n      throw new Error(\"Failed to add favorite\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n    alert(\"Error adding favorite\");\r\n  }\r\n}\r\nexport async function removeFav(productID) {\r\n  var user = getCurrentUser();\r\n  var userID = user.id;\r\n  try {\r\n    const response = await fetch(`http://${config.host}:3001/api/removeFav`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userID: userID,\r\n        productID: productID,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert(\"Favorite removed successfully\");\r\n    } else {\r\n      throw new Error(\"Failed to remove favorite\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n    alert(\"Error removing favorite\");\r\n  }\r\n}\r\nexport async function getAllFavorites() {\r\n  var user = await getCurrentUser();\r\n  try {\r\n    const response = await fetch(\r\n      `http://${config.host}:3001/api/getAllFavorites`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          userID: user.id,\r\n        }),\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log(\"Favorites:\", data);\r\n      return Array.isArray(data) ? data : [data];\r\n    } else {\r\n      throw new Error(\"Failed to fetch favorites\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n    alert(\"Error fetching favorites\");\r\n  }\r\n}\r\n\r\nexport async function login() {\r\n  var username = document.getElementById(\"username\").value;\r\n  var password = document.getElementById(\"pass\").value;\r\n\r\n  try {\r\n    const response = await fetch(`http://${config.host}:3001/api/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      // Save access token in cookie\r\n      document.cookie = `accessToken=${data.accessToken}`;\r\n      alert(\"Login successful\");\r\n      window.location.replace(\"/\");\r\n    } else if (response.status === 404) {\r\n      alert(\"User not found\");\r\n    } else if (response.status === 401) {\r\n      alert(\"Incorrect password\");\r\n    } else {\r\n      throw new Error(\"Failed to login\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n    alert(\"Error logging in\");\r\n  }\r\n}\r\nexport async function validateAccessToken() {\r\n  var accessToken = cookie.get(\"accessToken\");\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `http://${config.host}:3001/api/validateAccessToken`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          accessToken: accessToken,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (response.ok) {\r\n      return true;\r\n    } else if (response.status === 401) {\r\n      cookie.remove(\"accessToken\");\r\n      return false;\r\n    } else {\r\n      cookie.remove(\"accessToken\");\r\n      throw new Error(\"Failed to validate access token\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n    return false;\r\n  }\r\n}\r\nexport const getCurrentUser = async () => {\r\n  try {\r\n    const accessToken = cookie.get(\"accessToken\");\r\n    const response = await fetch(\r\n      `http://${config.host}:3001/api/getCurrentUser`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ accessToken }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch current user data\");\r\n    }\r\n\r\n    const userData = await response.json();\r\n    return userData;\r\n  } catch (error) {\r\n    console.error(\"Error fetching current user:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* \r\nexport async function getAllItems() {\r\n  try {\r\n    const response = await fetch(`http://${config.url}:3001/api/getAllItems`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return response.json();\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n  }\r\n} */\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}