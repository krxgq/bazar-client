{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bodnarchuk Bohdan\\\\Desktop\\\\bazar_remake\\\\frontend\\\\src\\\\Favourites.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FavCard from \"./components/FavCard.jsx\";\nimport { getCurrentUser } from \"./app.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require(\"./configs/config.js\");\nconst Favourites = () => {\n  _s();\n  const [favs, setFavs] = useState([]);\n  const [userID, setUserID] = useState(null);\n  useEffect(() => {\n    const fetchFavs = async () => {\n      try {\n        const user = await getCurrentUser();\n        setUserID(user.id);\n        const response = await fetch(`http://${config.host}:3001/api/getAllFavorites`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: user.id\n          }) // Use user.id here directly\n        });\n        if (!response.ok) {\n          throw new Error(`Error fetching favourite items: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setFavs(data); // Set the items in state\n      } catch (error) {\n        console.error(\"Error fetching favourite items: \", error);\n      }\n    };\n    fetchFavs(); // Call fetchFavs inside useEffect to avoid infinite loop\n  }, []); // Empty dependency array means this effect runs only once, similar to componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: favs.map(fav => /*#__PURE__*/_jsxDEV(FavCard, {\n      // Ensure fav.id is unique for each FavCard\n      id: fav.id,\n      name: fav.title,\n      img: fav.img,\n      price: fav.price\n    }, fav.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Favourites, \"EKAAyMgV2nb2TrIExanjfF3vK34=\");\n_c = Favourites;\nexport default Favourites;\nvar _c;\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"names":["React","useState","useEffect","FavCard","getCurrentUser","jsxDEV","_jsxDEV","config","require","Favourites","_s","favs","setFavs","userID","setUserID","fetchFavs","user","id","response","fetch","host","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","error","console","StrictMode","children","map","fav","name","title","img","price","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bodnarchuk Bohdan/Desktop/bazar_remake/frontend/src/Favourites.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FavCard from \"./components/FavCard.jsx\";\r\nimport { getCurrentUser } from \"./app.js\";\r\nconst config = require(\"./configs/config.js\");\r\n\r\nconst Favourites = () => {\r\n  const [favs, setFavs] = useState([]);\r\n  const [userID, setUserID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFavs = async () => {\r\n      try {\r\n        const user = await getCurrentUser();\r\n        setUserID(user.id);\r\n\r\n        const response = await fetch(\r\n          `http://${config.host}:3001/api/getAllFavorites`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ id: user.id }), // Use user.id here directly\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching favourite items: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setFavs(data); // Set the items in state\r\n      } catch (error) {\r\n        console.error(\"Error fetching favourite items: \", error);\r\n      }\r\n    };\r\n\r\n    fetchFavs(); // Call fetchFavs inside useEffect to avoid infinite loop\r\n  }, []); // Empty dependency array means this effect runs only once, similar to componentDidMount\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      \r\n      {favs.map((fav) => (\r\n        <FavCard\r\n          key={fav.id} // Ensure fav.id is unique for each FavCard\r\n          id={fav.id}\r\n          name={fav.title}\r\n          img={fav.img}\r\n          price={fav.price}\r\n        />\r\n      ))}\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,MAAM,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,cAAc,CAAC,CAAC;QACnCU,SAAS,CAACE,IAAI,CAACC,EAAE,CAAC;QAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,UAAUZ,MAAM,CAACa,IAAI,2BAA2B,EAChD;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER,EAAE,EAAED,IAAI,CAACC;UAAG,CAAC,CAAC,CAAE;QACzC,CACF,CAAC;QAED,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,mCAAmCT,QAAQ,CAACU,UAAU,EAAE,CAAC;QAC3E;QAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClClB,OAAO,CAACiB,IAAI,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDhB,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA,CAACN,KAAK,CAACiC,UAAU;IAAAC,QAAA,EAEdvB,IAAI,CAACwB,GAAG,CAAEC,GAAG,iBACZ9B,OAAA,CAACH,OAAO;MACO;MACbc,EAAE,EAAEmB,GAAG,CAACnB,EAAG;MACXoB,IAAI,EAAED,GAAG,CAACE,KAAM;MAChBC,GAAG,EAAEH,GAAG,CAACG,GAAI;MACbC,KAAK,EAAEJ,GAAG,CAACI;IAAM,GAJZJ,GAAG,CAACnB,EAAE;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEvB,CAAC;AAAClC,EAAA,CAjDID,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}