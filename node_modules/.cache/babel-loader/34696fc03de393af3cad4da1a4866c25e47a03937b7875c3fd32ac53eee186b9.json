{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bodnarchuk Bohdan\\\\Desktop\\\\bazar_remake\\\\frontend\\\\src\\\\Favourites.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FavCard from \"./components/FavCard.jsx\";\nimport { getCurrentUser } from \"./app.js\";\nimport Header from \"./components/Header.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require(\"./configs/config.js\");\nconst Favourites = () => {\n  _s();\n  const [favs, setFavs] = useState([]);\n  const [userID, setUserID] = useState(null);\n  useEffect(() => {\n    const fetchFavs = async () => {\n      try {\n        const user = await getCurrentUser();\n        console.log(user.id);\n        setUserID(user.id);\n        const response = await fetch(`http://${config.host}:3001/api/getAllFavorites`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: userID\n          }) // Use user.id here directly\n        });\n        if (!response.ok) {\n          throw new Error(`Error fetching favourite items: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setFavs(data); // Set the items in state\n      } catch (error) {\n        console.error(\"Error fetching favourite items: \", error);\n      }\n    };\n    fetchFavs(); // Call fetchFavs inside useEffect to avoid infinite loop\n\n    const fetchData = async id => {\n      try {\n        const response = await fetch(`http://${config.host}:3001/api/getItem?id=${id}`, {\n          // sends id as query parameter\n          method: \"GET\",\n          // GET request instead of POST\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const responseData = await response.json();\n        setData(responseData);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    };\n    console.log(\"favs:\", favs);\n    let favsData = [];\n    favs.forEach(fav => {\n      let favData = favsData.push(fetchData(fav.ItemID));\n    });\n    setFavs(favsData);\n  }, []); // Empty dependency array means this effect runs only once, similar to componentDidMount\n\n  console.log(\"favs:\", favs);\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), favs.map(fav => /*#__PURE__*/_jsxDEV(FavCard, {\n      // Ensure fav.id is unique for each FavCard\n      id: fav.id,\n      name: fav.title,\n      img: fav.img,\n      price: fav.price\n    }, fav.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Favourites, \"EKAAyMgV2nb2TrIExanjfF3vK34=\");\n_c = Favourites;\nexport default Favourites;\nvar _c;\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"names":["React","useState","useEffect","FavCard","getCurrentUser","Header","jsxDEV","_jsxDEV","config","require","Favourites","_s","favs","setFavs","userID","setUserID","fetchFavs","user","console","log","id","response","fetch","host","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","error","fetchData","responseData","setData","favsData","forEach","fav","favData","push","ItemID","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","title","img","price","_c","$RefreshReg$"],"sources":["C:/Users/Bodnarchuk Bohdan/Desktop/bazar_remake/frontend/src/Favourites.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FavCard from \"./components/FavCard.jsx\";\r\nimport { getCurrentUser } from \"./app.js\";\r\nimport Header from \"./components/Header.jsx\";\r\nconst config = require(\"./configs/config.js\");\r\n\r\nconst Favourites = () => {\r\n  const [favs, setFavs] = useState([]);\r\n  const [userID, setUserID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFavs = async () => {\r\n      try {\r\n        const user = await getCurrentUser();\r\n        console.log(user.id);\r\n        setUserID(user.id);\r\n\r\n        const response = await fetch(\r\n          `http://${config.host}:3001/api/getAllFavorites`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ id: userID }), // Use user.id here directly\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `Error fetching favourite items: ${response.statusText}`\r\n          );\r\n        }\r\n\r\n        const data = await response.json();\r\n        setFavs(data); // Set the items in state\r\n      } catch (error) {\r\n        console.error(\"Error fetching favourite items: \", error);\r\n      }\r\n    };\r\n\r\n    fetchFavs(); // Call fetchFavs inside useEffect to avoid infinite loop\r\n\r\n    const fetchData = async (id) => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://${config.host}:3001/api/getItem?id=${id}`,\r\n          {\r\n            // sends id as query parameter\r\n            method: \"GET\", // GET request instead of POST\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const responseData = await response.json();\r\n        setData(responseData);\r\n      } catch (error) {\r\n        console.error(\"Fetch error:\", error);\r\n      }\r\n    };\r\n    console.log(\"favs:\", favs);\r\n\r\n    let favsData = [];\r\n    favs.forEach((fav) => {\r\n      let favData =\r\n      favsData.push(fetchData(fav.ItemID));\r\n    });\r\n    setFavs(favsData);\r\n  }, []); // Empty dependency array means this effect runs only once, similar to componentDidMount\r\n\r\n  console.log(\"favs:\", favs);\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Header />\r\n      {favs.map((fav) => (\r\n        <FavCard\r\n          key={fav.id} // Ensure fav.id is unique for each FavCard\r\n          id={fav.id}\r\n          name={fav.title}\r\n          img={fav.img}\r\n          price={fav.price}\r\n        />\r\n      ))}\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}